{"version":3,"sources":["webpack://asc/webpack/universalModuleDefinition","webpack://asc/webpack/bootstrap","webpack://asc/./shim/path.js","webpack://asc/./shim/fs.js","webpack://asc/./shim/process.js","webpack://asc/../node_modules/webpack/buildin/global.js","webpack://asc/./util/colors.js","webpack://asc/./asc.js","webpack://asc/./util/utf8.js","webpack://asc/./util/options.js","webpack://asc/./util/mkdirp.js","webpack://asc/./util/find.js","webpack://asc/external \"binaryen\"","webpack://asc/external \"assemblyscript\""],"names":["root","factory","exports","module","require","e","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__11__","__WEBPACK_EXTERNAL_MODULE__12__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","process","assertPath","path","TypeError","JSON","stringify","normalizeStringPosix","allowAboveRoot","code","res","lastSegmentLength","lastSlash","dots","length","charCodeAt","lastSlashIndex","lastIndexOf","slice","posix","resolve","cwd","resolvedPath","resolvedAbsolute","arguments","undefined","normalize","isAbsolute","trailingSeparator","join","joined","arg","relative","from","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","out","_makeLong","dirname","hasRoot","end","matchedSlash","basename","ext","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","sep","dir","base","_format","parse","ret","delimiter","win32","platform","umask","hrtime","previousTimestamp","clocktime","performanceNow","performance","seconds","Math","floor","nanoseconds","global","now","mozNow","msNow","oNow","webkitNow","Date","getTime","g","Function","window","proc","isCI","env","stream","colors","supported","isTTY","gray","text","GRAY","RESET","red","RED","green","GREEN","yellow","YELLOW","blue","BLUE","magenta","MAGENTA","cyan","CYAN","white","WHITE","stdout","stderr","fs","utf8","colorsUtil","optionsUtil","mkdirp","find","binaryen","dynrequire","WIN","EOL","SEP","setupExtension","startsWith","ext_d","re","RegExp","re_d","re_except_d","re_index","defaultExtension","assemblyscript","ready","removeAllListeners","isDev","register","project","skipIgnore","compilerOptions","target","e_ts","Error","stack","isBundle","version","options","libraryPrefix","LIBRARY_PREFIX","defaultOptimizeLevel","defaultShrinkLevel","libraryFiles","libDir","bundled","files","forEach","file","replace","readFileSync","definitionFiles","readDefinition","assembly","portable","compileString","sources","output","createMemoryStream","argv","keys","val","opt","type","push","Array","isArray","String","main","concat","readFile","writeFile","contents","listFiles","callback","readFileNode","writeFileNode","listFilesNode","stats","readTime","readCount","writeTime","writeCount","parseTime","parseCount","initializeTime","initializeCount","compileTime","compileCount","emitTime","emitCount","validateTime","validateCount","optimizeTime","optimizeCount","transformTime","transformCount","extension","optionsResult","opts","noColors","unknownOpts","unknown","write","trailingArgv","trailing","err","test","help","color","baseDir","asconfigPath","resolvePath","config","asconfigFile","asconfigDir","asconfig","getAsconfig","seenAsconfig","Set","add","targets","targetOptions","merge","generalOptions","entries","entry","extends","has","addDefaults","showConfig","unique","values","newOptions","setTarget","setNoAssert","noAssert","setExportMemory","noExportMemory","setImportMemory","importMemory","setInitialMemory","initialMemory","setMaximumMemory","maximumMemory","setSharedMemory","sharedMemory","setImportTable","importTable","setExportTable","exportTable","setExplicitStart","explicitStart","setMemoryBase","memoryBase","setTableBase","tableBase","setSourceMap","sourceMap","setNoUnsafe","noUnsafe","setPedantic","pedantic","setLowMemoryLimit","lowMemoryLimit","use","aliases","k","part","indexOf","alias","substring","trim","setGlobalAlias","features","disable","split","flag","toUpperCase","disableFeature","enable","enableFeature","optimizeLevel","shrinkLevel","optimize","min","max","setOptimizeLevelHints","program","newProgram","transforms","transform","tsNodeRegistered","transformArgs","filename","endsWith","transpileOnly","skipProject","classOrModule","paths","assign","log","console","error","applyTransform","args","transfromTime","measure","libPath","customLibDirs","lib","map","libFiles","j","libText","packageMains","Map","packageBases","getFile","internalPath","dependeePath","sourceText","sourcePath","plainName","indexName","match","packageName","isPackageRoot","filePath","basePath","traceResolution","parts","currentPath","mainPath","jsonPath","jsonText","json","ascMain","set","mainDir","parseBacklog","nextFile","getDependee","numErrors","checkDiagnostics","message","runtimeName","runtime","runtimePath","runtimeText","parser","normalizedPath","sort","initializeProgram","compile","dispose","noValidate","isValid","validate","trapMode","runPass","debugInfo","debug","usesARC","converge","runPasses","pass","last","toBinary","next","noEmit","outFile","textFile","jsFile","binaryFile","hasStdout","hasOutput","tsdFile","idlFile","wasm","sourceMapURL","writeStdout","sourceRoot","index","getSource","sourcesContent","wat","toText","idl","buildIDL","tsd","buildTSD","js","toAsmjs","printStats","encoding","dirPath","outputFilePath","existsSync","writeFileSync","readdirSync","filter","used","toString","isObject","location","ex","include","diagnostic","nextDiagnostic","formatDiagnostic","isError","createStats","fn","times","formatTime","time","toFixed","count","str","len","pad","allocBuffer","Buffer","allocUnsafe","Uint8Array","chunk","buffer","reset","toBuffer","offset","read","tscOptions","alwaysStrict","noImplicitAny","noImplicitReturns","noImplicitThis","noEmitOnError","strictNullChecks","experimentalDecorators","noLib","types","allowJs","string","fromCharCode","apply","c1","c2","sanitizeValue","Boolean","trunc","Number","v","propagateDefaults","option","default","exec","parseInt","parseFloat","indent","padding","eol","sbCategories","sbOther","description","sb","noCategories","category","line","hasCategories","currentOptions","parentOptions","parentBaseDir","mergedOptions","mutuallyExclusive","isPath","useNodeResolution","cliOnly","currentValue","parentValue","exclude","includes","defaultValue","made","mkdirSync","err0","stat","statSync","err1","isDirectory","findFiles","iname"],"mappings":"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","file":"asc.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"binaryen\"), (function webpackLoadOptionalExternalModule() { try { return require(\"assemblyscript\"); } catch(e) {} }()));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"binaryen\", \"assemblyscript\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"asc\"] = factory(require(\"binaryen\"), (function webpackLoadOptionalExternalModule() { try { return require(\"assemblyscript\"); } catch(e) {} }()));\n\telse\n\t\troot[\"asc\"] = factory(root[\"binaryen\"], root[\"assemblyscript\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__11__, __WEBPACK_EXTERNAL_MODULE__12__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","const process = require(\"process\"); // ensure shim\n\n// https://github.com/browserify/path-browserify v1.0.1\n//\n// Copyright (c) 2013 James Halliday\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 || res.charCodeAt(res.length - 2) !== 46) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    if (from === \".\") return to; // FIX for 'odule.ts' (see issue #1398)\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","module.exports = {};\n","module.exports = {\n  platform: \"linux\",\n  cwd() {\n    return \".\";\n  },\n  umask() {\n    return 0;\n  },\n  hrtime\n};\n\n// https://github.com/kumavis/browser-process-hrtime v1.0.0\n//\n// Copyright 2014 kumavis\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n// 1. Redistributions of source code must retain the above copyright notice,\n// this list of conditions and the following disclaimer.\n//\n// 2. Redistributions in binary form must reproduce the above copyright notice,\n// this list of conditions and the following disclaimer in the documentation\n// and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nvar performance = global.performance || {};\nvar performanceNow =\n  performance.now        ||\n  performance.mozNow     ||\n  performance.msNow      ||\n  performance.oNow       ||\n  performance.webkitNow  ||\n  function(){ return (new Date()).getTime(); };\n\nfunction hrtime(previousTimestamp) {\n  var clocktime = performanceNow.call(performance);\n  var seconds = Math.floor(clocktime * 1e-3);\n  var nanoseconds = Math.floor(clocktime * 1e6 - seconds * 1e9);\n  if (previousTimestamp) {\n    seconds -= previousTimestamp[0];\n    nanoseconds -= previousTimestamp[1];\n    if (nanoseconds < 0) {\n      seconds--;\n      nanoseconds += 1e9;\n    }\n  }\n  return [ seconds, nanoseconds ];\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * @fileoverview Terminal colors utility.\n * @license Apache-2.0\n */\n\nvar proc = typeof process !== \"undefined\" && process || {};\nvar isCI = proc.env && \"CI\" in proc.env; // doesn't work when bundled because 'process' is a mock\n\nfunction from(stream, base) {\n  var colors = base || {};\n  colors.supported = (stream && !!stream.isTTY) || isCI;\n  colors.gray = text => colors.supported ? exports.GRAY + text + exports.RESET : text;\n  colors.red = text => colors.supported ? exports.RED + text + exports.RESET : text;\n  colors.green = text => colors.supported ? exports.GREEN + text + exports.RESET : text;\n  colors.yellow = text => colors.supported ? exports.YELLOW + text + exports.RESET : text;\n  colors.blue = text => colors.supported ? exports.BLUE + text + exports.RESET : text;\n  colors.magenta = text => colors.supported ? exports.MAGENTA + text + exports.RESET : text;\n  colors.cyan = text => colors.supported ? exports.CYAN + text + exports.RESET : text;\n  colors.white = text => colors.supported ? exports.WHITE + text + exports.RESET : text;\n  return colors;\n}\n\nexports.stdout = from(proc.stdout, exports);\nexports.stderr = from(proc.stderr);\nexports.from = from;\n\nexports.GRAY = \"\\u001b[90m\";\nexports.RED = \"\\u001b[91m\";\nexports.GREEN = \"\\u001b[92m\";\nexports.YELLOW = \"\\u001b[93m\";\nexports.BLUE = \"\\u001b[94m\";\nexports.MAGENTA = \"\\u001b[95m\";\nexports.CYAN = \"\\u001b[96m\";\nexports.WHITE = \"\\u001b[97m\";\nexports.RESET = \"\\u001b[0m\";\n","/**\n * @license\n * Copyright 2020 Daniel Wirtz / The AssemblyScript Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Compiler frontend for node.js\n *\n * Uses the low-level API exported from src/index.ts so it works with the compiler compiled to\n * JavaScript as well as the compiler compiled to WebAssembly (eventually). Runs the sources\n * directly through ts-node if distribution files are not present (indicated by a `-dev` version).\n *\n * Can also be packaged as a bundle suitable for in-browser use with the standard library injected\n * in the build step. See dist/asc.js for the bundle and webpack.config.js for building details.\n */\n\n/* global BUNDLE_VERSION, BUNDLE_LIBRARY, BUNDLE_DEFINITIONS */\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst process = require(\"process\"); // ensure shim\n\nconst utf8 = require(\"./util/utf8\");\nconst colorsUtil = require(\"./util/colors\");\nconst optionsUtil = require(\"./util/options\");\nconst mkdirp = require(\"./util/mkdirp\");\nconst find = require(\"./util/find\");\nconst binaryen = global.binaryen || (global.binaryen = require(\"binaryen\"));\n\nconst dynrequire = typeof __webpack_require__ === \"function\"\n  ? __non_webpack_require__\n  : require;\n\nconst WIN = process.platform === \"win32\";\nconst EOL = WIN ? \"\\r\\n\" : \"\\n\";\nconst SEP = WIN ? \"\\\\\" : \"/\";\n\n// Sets up an extension with its definition counterpart and relevant regexes.\nfunction setupExtension(ext) {\n  if (!ext.startsWith(\".\")) ext = \".\" + ext;\n  return {\n    ext,\n    ext_d: \".d\" + ext,\n    re: new RegExp(\"\\\\\" + ext + \"$\"),\n    re_d: new RegExp(\"\\\\.d\\\\\" + ext + \"$\"),\n    re_except_d: new RegExp(\"^(?!.*\\\\.d\\\\\" + ext + \"$).*\\\\\" + ext + \"$\"),\n    re_index: new RegExp(\"(?:^|[\\\\\\\\\\\\/])index\\\\\" + ext + \"$\")\n  };\n}\n\nconst defaultExtension = setupExtension(\".ts\");\n\n// Proxy Binaryen's ready event\nObject.defineProperty(exports, \"ready\", {\n  get() { return binaryen.ready; }\n});\n\n// Emscripten adds an `uncaughtException` listener to Binaryen that results in an additional\n// useless code fragment on top of an actual error. suppress this:\nif (process.removeAllListeners) process.removeAllListeners(\"uncaughtException\");\n\n// Use distribution files if present, otherwise run the sources directly.\nvar assemblyscript;\nvar isDev = false;\n(function loadAssemblyScript() {\n  try {\n    assemblyscript = require(\"assemblyscript\");\n  } catch (e) {\n    try { // `asc` on the command line\n      assemblyscript = dynrequire(\"../dist/assemblyscript.js\");\n    } catch (e) {\n      try { // `asc` on the command line without dist files\n        dynrequire(\"ts-node\").register({\n          project: path.join(__dirname, \"..\", \"src\", \"tsconfig.json\"),\n          skipIgnore: true,\n          compilerOptions: { target: \"ES2016\" }\n        });\n        dynrequire(\"../src/glue/js\");\n        assemblyscript = dynrequire(\"../src\");\n        isDev = true;\n      } catch (e_ts) {\n        try { // `require(\"dist/asc.js\")` in explicit browser tests\n          assemblyscript = dynrequire(\"./assemblyscript\");\n        } catch (e) {\n          throw Error(e_ts.stack + \"\\n---\\n\" + e.stack);\n        }\n      }\n    }\n  }\n})();\n\n/** Whether this is a webpack bundle or not. */\nexports.isBundle = typeof BUNDLE_VERSION === \"string\";\n\n/** Whether asc runs the sources directly or not. */\nexports.isDev = isDev;\n\n/** AssemblyScript version. */\nexports.version = exports.isBundle ? BUNDLE_VERSION : dynrequire(\"../package.json\").version;\n\n/** Available CLI options. */\nexports.options = require(\"./asc.json\");\n\n/** Prefix used for library files. */\nexports.libraryPrefix = assemblyscript.LIBRARY_PREFIX;\n\n/** Default Binaryen optimization level. */\nexports.defaultOptimizeLevel = 3;\n\n/** Default Binaryen shrink level. */\nexports.defaultShrinkLevel = 1;\n\n/** Bundled library files. */\nexports.libraryFiles = exports.isBundle ? BUNDLE_LIBRARY : (() => { // set up if not a bundle\n  const libDir = path.join(__dirname, \"..\", \"std\", \"assembly\");\n  const bundled = {};\n  find\n    .files(libDir, defaultExtension.re_except_d)\n    .forEach(file => {\n      bundled[file.replace(defaultExtension.re, \"\")] = fs.readFileSync(path.join(libDir, file), \"utf8\");\n    });\n  return bundled;\n})();\n\n/** Bundled definition files. */\nexports.definitionFiles = exports.isBundle ? BUNDLE_DEFINITIONS : (() => { // set up if not a bundle\n  const readDefinition = name => fs.readFileSync(\n    path.join(__dirname, \"..\", \"std\", name, \"index\" + defaultExtension.ext_d),\n    \"utf8\"\n  );\n  return {\n    assembly: readDefinition(\"assembly\"),\n    portable: readDefinition(\"portable\")\n  };\n})();\n\n/** Convenience function that parses and compiles source strings directly. */\nexports.compileString = (sources, options) => {\n  if (typeof sources === \"string\") sources = { [\"input\" + defaultExtension.ext]: sources };\n  const output = Object.create({\n    stdout: createMemoryStream(),\n    stderr: createMemoryStream()\n  });\n  var argv = [\n    \"--binaryFile\", \"binary\",\n    \"--textFile\", \"text\",\n  ];\n  Object.keys(options || {}).forEach(key => {\n    var val = options[key];\n    var opt = exports.options[key];\n    if (opt && opt.type === \"b\") {\n      if (val) argv.push(\"--\" + key);\n    } else {\n      if (Array.isArray(val)) {\n        val.forEach(val => { argv.push(\"--\" + key, String(val)); });\n      }\n      else argv.push(\"--\" + key, String(val));\n    }\n  });\n  exports.main(argv.concat(Object.keys(sources)), {\n    stdout: output.stdout,\n    stderr: output.stderr,\n    readFile: name => Object.prototype.hasOwnProperty.call(sources, name) ? sources[name] : null,\n    writeFile: (name, contents) => { output[name] = contents; },\n    listFiles: () => []\n  });\n  return output;\n};\n\n/** Runs the command line utility using the specified arguments array. */\nexports.main = function main(argv, options, callback) {\n  if (typeof options === \"function\") {\n    callback = options;\n    options = {};\n  } else if (!options) {\n    options = {};\n  }\n\n  const stdout = options.stdout || process.stdout;\n  const stderr = options.stderr || process.stderr;\n  const readFile = options.readFile || readFileNode;\n  const writeFile = options.writeFile || writeFileNode;\n  const listFiles = options.listFiles || listFilesNode;\n  const stats = options.stats || createStats();\n  let extension = defaultExtension;\n\n  // Output must be specified if not present in the environment\n  if (!stdout) throw Error(\"'options.stdout' must be specified\");\n  if (!stderr) throw Error(\"'options.stderr' must be specified\");\n\n  // Parse command line options but do not populate option defaults yet\n  const optionsResult = optionsUtil.parse(argv, exports.options, false);\n  let opts = optionsResult.options;\n  argv = optionsResult.arguments;\n\n  if (opts.noColors) {\n    colorsUtil.stdout.supported =\n    colorsUtil.stderr.supported = false;\n  } else {\n    colorsUtil.stdout = colorsUtil.from(stdout);\n    colorsUtil.stderr = colorsUtil.from(stderr);\n  }\n\n  // Check for unknown options\n  const unknownOpts = optionsResult.unknown;\n  if (unknownOpts.length) {\n    unknownOpts.forEach(arg => {\n      stderr.write(colorsUtil.stderr.yellow(\"WARNING \") + \"Unknown option '\" + arg + \"'\" + EOL);\n    });\n  }\n\n  // Check for trailing arguments\n  const trailingArgv = optionsResult.trailing;\n  if (trailingArgv.length) {\n    stderr.write(colorsUtil.stderr.yellow(\"WARNING \") + \"Unsupported trailing arguments: \" + trailingArgv.join(\" \") + EOL);\n  }\n\n  // Use default callback if none is provided\n  if (!callback) callback = function defaultCallback(err) {\n    var code = 0;\n    if (err) {\n      stderr.write(colorsUtil.stderr.red(\"FAILURE \") + err.stack.replace(/^ERROR: /i, \"\") + EOL);\n      code = 1;\n    }\n    return code;\n  };\n\n  // Just print the version if requested\n  if (opts.version) {\n    stdout.write(\"Version \" + exports.version + (isDev ? \"-dev\" : \"\") + EOL);\n    return callback(null);\n  }\n\n  // Use another extension if requested\n  if (typeof opts.extension === \"string\") {\n    if (/^\\.?[0-9a-zA-Z]{1,14}$/.test(opts.extension)) {\n      extension = setupExtension(opts.extension);\n    } else {\n      return callback(Error(\"Invalid extension: \" + opts.extension));\n    }\n  }\n\n  // Print the help message if requested or no source files are provided\n  if (opts.help || !argv.length) {\n    var out = opts.help ? stdout : stderr;\n    var color = opts.help ? colorsUtil.stdout : colorsUtil.stderr;\n    out.write([\n      color.white(\"SYNTAX\"),\n      \"  \" + color.cyan(\"asc\") + \" [entryFile ...] [options]\",\n      \"\",\n      color.white(\"EXAMPLES\"),\n      \"  \" + color.cyan(\"asc\") + \" hello\" + extension.ext,\n      \"  \" + color.cyan(\"asc\") + \" hello\" + extension.ext + \" -b hello.wasm -t hello.wat\",\n      \"  \" + color.cyan(\"asc\") + \" hello1\" + extension.ext + \" hello2\" + extension.ext + \" -b -O > hello.wasm\",\n      \"\",\n      color.white(\"OPTIONS\"),\n    ].concat(\n      optionsUtil.help(exports.options, 24, EOL)\n    ).join(EOL) + EOL);\n    return callback(null);\n  }\n\n  // I/O must be specified if not present in the environment\n  if (!fs.readFileSync) {\n    if (readFile === readFileNode) throw Error(\"'options.readFile' must be specified\");\n    if (writeFile === writeFileNode) throw Error(\"'options.writeFile' must be specified\");\n    if (listFiles === listFilesNode) throw Error(\"'options.listFiles' must be specified\");\n  }\n\n  // Set up base directory\n  const baseDir = path.normalize(opts.baseDir || \".\");\n\n  // Load additional options from asconfig.json\n  let asconfigPath = optionsUtil.resolvePath(opts.config || \"asconfig.json\", baseDir);\n  let asconfigFile = path.basename(asconfigPath);\n  let asconfigDir = path.dirname(asconfigPath);\n  let asconfig = getAsconfig(asconfigFile, asconfigDir, readFile);\n\n  const seenAsconfig = new Set();\n  seenAsconfig.add(asconfigPath);\n\n  const target = opts.target || \"release\";\n  while (asconfig) {\n    // Merge target first\n    if (asconfig.targets) {\n      const targetOptions = asconfig.targets[target];\n      if (targetOptions) {\n        opts = optionsUtil.merge(exports.options, opts, targetOptions, asconfigDir);\n      }\n    }\n    // Merge general options\n    const generalOptions = asconfig.options;\n    if (generalOptions) {\n      opts = optionsUtil.merge(exports.options, opts, generalOptions, asconfigDir);\n    }\n\n    // Append entries\n    if (asconfig.entries) {\n      for (let entry of asconfig.entries) {\n        argv.push(optionsUtil.resolvePath(entry, asconfigDir));\n      }\n    }\n\n    // Look up extended asconfig and repeat\n    if (asconfig.extends) {\n      asconfigPath = optionsUtil.resolvePath(asconfig.extends, asconfigDir, true);\n      asconfigFile = path.basename(asconfigPath);\n      asconfigDir = path.dirname(asconfigPath);\n      if (seenAsconfig.has(asconfigPath)) break;\n      seenAsconfig.add(asconfigPath);\n      asconfig = getAsconfig(asconfigFile, asconfigDir, readFile);\n    } else {\n      break;\n    }\n  }\n\n  // Populate option defaults once user-defined options are set\n  optionsUtil.addDefaults(exports.options, opts);\n\n  // If showConfig print options and exit\n  if (opts.showConfig) {\n    stderr.write(JSON.stringify({\n      options: opts,\n      entries: argv\n    }, null, 2));\n    return callback(null);\n  }\n\n  // create a unique set of values\n  function unique(values) {\n    return [...new Set(values)];\n  }\n\n  // Set up options\n  const compilerOptions = assemblyscript.newOptions();\n  assemblyscript.setTarget(compilerOptions, 0);\n  assemblyscript.setNoAssert(compilerOptions, opts.noAssert);\n  assemblyscript.setExportMemory(compilerOptions, !opts.noExportMemory);\n  assemblyscript.setImportMemory(compilerOptions, opts.importMemory);\n  assemblyscript.setInitialMemory(compilerOptions, opts.initialMemory >>> 0);\n  assemblyscript.setMaximumMemory(compilerOptions, opts.maximumMemory >>> 0);\n  assemblyscript.setSharedMemory(compilerOptions, opts.sharedMemory);\n  assemblyscript.setImportTable(compilerOptions, opts.importTable);\n  assemblyscript.setExportTable(compilerOptions, opts.exportTable);\n  assemblyscript.setExplicitStart(compilerOptions, opts.explicitStart);\n  assemblyscript.setMemoryBase(compilerOptions, opts.memoryBase >>> 0);\n  assemblyscript.setTableBase(compilerOptions, opts.tableBase >>> 0);\n  assemblyscript.setSourceMap(compilerOptions, opts.sourceMap != null);\n  assemblyscript.setNoUnsafe(compilerOptions, opts.noUnsafe);\n  assemblyscript.setPedantic(compilerOptions, opts.pedantic);\n  assemblyscript.setLowMemoryLimit(compilerOptions, opts.lowMemoryLimit >>> 0);\n\n  // Add or override aliases if specified\n  if (opts.use) {\n    let aliases = opts.use;\n    for (let i = 0, k = aliases.length; i < k; ++i) {\n      let part = aliases[i];\n      let p = part.indexOf(\"=\");\n      if (p < 0) return callback(Error(\"Global alias '\" + part + \"' is invalid.\"));\n      let alias = part.substring(0, p).trim();\n      let name = part.substring(p + 1).trim();\n      if (!alias.length) return callback(Error(\"Global alias '\" + part + \"' is invalid.\"));\n      assemblyscript.setGlobalAlias(compilerOptions, alias, name);\n    }\n  }\n\n  // Disable default features if specified\n  var features;\n  if ((features = opts.disable) != null) {\n    if (typeof features === \"string\") features = features.split(\",\");\n    for (let i = 0, k = features.length; i < k; ++i) {\n      let name = features[i].trim();\n      let flag = assemblyscript[\"FEATURE_\" + name.replace(/-/g, \"_\").toUpperCase()];\n      if (!flag) return callback(Error(\"Feature '\" + name + \"' is unknown.\"));\n      assemblyscript.disableFeature(compilerOptions, flag);\n    }\n  }\n\n  // Enable experimental features if specified\n  if ((features = opts.enable) != null) {\n    if (typeof features === \"string\") features = features.split(\",\");\n    for (let i = 0, k = features.length; i < k; ++i) {\n      let name = features[i].trim();\n      let flag = assemblyscript[\"FEATURE_\" + name.replace(/-/g, \"_\").toUpperCase()];\n      if (!flag) return callback(Error(\"Feature '\" + name + \"' is unknown.\"));\n      assemblyscript.enableFeature(compilerOptions, flag);\n    }\n  }\n\n  // Set up optimization levels\n  var optimizeLevel = 0;\n  var shrinkLevel = 0;\n  if (opts.optimize) {\n    optimizeLevel = exports.defaultOptimizeLevel;\n    shrinkLevel = exports.defaultShrinkLevel;\n  }\n  if (typeof opts.optimizeLevel === \"number\") optimizeLevel = opts.optimizeLevel;\n  if (typeof opts.shrinkLevel === \"number\") shrinkLevel = opts.shrinkLevel;\n  optimizeLevel = Math.min(Math.max(optimizeLevel, 0), 3);\n  shrinkLevel = Math.min(Math.max(shrinkLevel, 0), 2);\n  assemblyscript.setOptimizeLevelHints(compilerOptions, optimizeLevel, shrinkLevel);\n\n  // Initialize the program\n  const program = assemblyscript.newProgram(compilerOptions);\n\n  // Set up transforms\n  const transforms = [];\n  if (opts.transform) {\n    let tsNodeRegistered = false;\n    let transformArgs = unique(opts.transform);\n    for (let i = 0, k = transformArgs.length; i < k; ++i) {\n      let filename = transformArgs[i].trim();\n      if (!tsNodeRegistered && filename.endsWith(\".ts\")) { // ts-node requires .ts specifically\n        dynrequire(\"ts-node\").register({ transpileOnly: true, skipProject: true, compilerOptions: { target: \"ES2016\" } });\n        tsNodeRegistered = true;\n      }\n      try {\n        const classOrModule = dynrequire(dynrequire.resolve(filename, { paths: [baseDir, process.cwd()] }));\n        if (typeof classOrModule === \"function\") {\n          Object.assign(classOrModule.prototype, {\n            program,\n            baseDir,\n            stdout,\n            stderr,\n            log: console.error,\n            readFile,\n            writeFile,\n            listFiles\n          });\n          transforms.push(new classOrModule());\n        } else {\n          transforms.push(classOrModule); // legacy module\n        }\n      } catch (e) {\n        return callback(e);\n      }\n    }\n  }\n\n  function applyTransform(name, ...args) {\n    for (let i = 0, k = transforms.length; i < k; ++i) {\n      let transform = transforms[i];\n      if (typeof transform[name] === \"function\") {\n        try {\n          stats.transformCount++;\n          stats.transfromTime += measure(() => {\n            transform[name](...args);\n          });\n        } catch (e) {\n          return e;\n        }\n      }\n    }\n  }\n\n  // Parse library files\n  Object.keys(exports.libraryFiles).forEach(libPath => {\n    if (libPath.indexOf(\"/\") >= 0) return; // in sub-directory: imported on demand\n    stats.parseCount++;\n    stats.parseTime += measure(() => {\n      assemblyscript.parse(program, exports.libraryFiles[libPath], exports.libraryPrefix + libPath + extension.ext, false);\n    });\n  });\n  let customLibDirs = [];\n  if (opts.lib) {\n    let lib = opts.lib;\n    if (typeof lib === \"string\") lib = lib.split(\",\");\n    customLibDirs.push(...lib.map(p => p.trim()));\n    customLibDirs = unique(customLibDirs); // `lib` and `customLibDirs` may include duplicates\n    for (let i = 0, k = customLibDirs.length; i < k; ++i) { // custom\n      let libDir = customLibDirs[i];\n      let libFiles;\n      if (libDir.endsWith(extension.ext)) {\n        libFiles = [ path.basename(libDir) ];\n        libDir = path.dirname(libDir);\n      } else {\n        libFiles = listFiles(libDir, baseDir) || [];\n      }\n      for (let j = 0, l = libFiles.length; j < l; ++j) {\n        let libPath = libFiles[j];\n        let libText = readFile(libPath, libDir);\n        if (libText === null) return callback(Error(\"Library file '\" + libPath + \"' not found.\"));\n        stats.parseCount++;\n        exports.libraryFiles[libPath.replace(extension.re, \"\")] = libText;\n        stats.parseTime += measure(() => {\n          assemblyscript.parse(program, libText, exports.libraryPrefix + libPath, false);\n        });\n      }\n    }\n  }\n  opts.path = opts.path || [];\n\n  // Maps package names to parent directory\n  var packageMains = new Map();\n  var packageBases = new Map();\n\n  // Gets the file matching the specified source path, imported at the given dependee path\n  function getFile(internalPath, dependeePath) {\n    var sourceText = null; // text reported back to the compiler\n    var sourcePath = null; // path reported back to the compiler\n\n    const libraryPrefix = exports.libraryPrefix;\n    const libraryFiles = exports.libraryFiles;\n\n    // Try file.ext, file/index.ext, file.d.ext\n    if (!internalPath.startsWith(libraryPrefix)) {\n      if ((sourceText = readFile(sourcePath = internalPath + extension.ext, baseDir)) == null) {\n        if ((sourceText = readFile(sourcePath = internalPath + \"/index\" + extension.ext, baseDir)) == null) {\n          // portable d.ext: uses the .js file next to it in JS or becomes an import in Wasm\n          sourcePath = internalPath + extension.ext;\n          sourceText = readFile(internalPath + extension.ext_d, baseDir);\n        }\n      }\n\n    // Search library in this order: stdlib, custom lib dirs, paths\n    } else {\n      const plainName = internalPath.substring(libraryPrefix.length);\n      const indexName = plainName + \"/index\";\n      if (Object.prototype.hasOwnProperty.call(libraryFiles, plainName)) {\n        sourceText = libraryFiles[plainName];\n        sourcePath = libraryPrefix + plainName + extension.ext;\n      } else if (Object.prototype.hasOwnProperty.call(libraryFiles, indexName)) {\n        sourceText = libraryFiles[indexName];\n        sourcePath = libraryPrefix + indexName + extension.ext;\n      } else { // custom lib dirs\n        for (const libDir of customLibDirs) {\n          if ((sourceText = readFile(plainName + extension.ext, libDir)) != null) {\n            sourcePath = libraryPrefix + plainName + extension.ext;\n            break;\n          } else {\n            if ((sourceText = readFile(indexName + extension.ext, libDir)) != null) {\n              sourcePath = libraryPrefix + indexName + extension.ext;\n              break;\n            }\n          }\n        }\n        if (sourceText == null) { // paths\n          const match = internalPath.match(/^~lib\\/((?:@[^/]+\\/)?[^/]+)(?:\\/(.+))?/); // ~lib/(pkg)/(path), ~lib/(@org/pkg)/(path)\n          if (match) {\n            const packageName = match[1];\n            const isPackageRoot = match[2] === undefined;\n            const filePath = isPackageRoot ? \"index\" : match[2];\n            const basePath = packageBases.has(dependeePath) ? packageBases.get(dependeePath) : \".\";\n            if (opts.traceResolution) stderr.write(\"Looking for package '\" + packageName + \"' file '\" + filePath + \"' relative to '\" + basePath + \"'\" + EOL);\n            const paths = [];\n            const parts = path.resolve(baseDir, basePath).split(SEP);\n            for (let i = parts.length, k = WIN ? 1 : 0; i >= k; --i) {\n              if (parts[i - 1] !== \"node_modules\") paths.push(parts.slice(0, i).join(SEP) + SEP + \"node_modules\");\n            }\n            for (const currentPath of paths.concat(...opts.path).map(p => path.relative(baseDir, p))) {\n              if (opts.traceResolution) stderr.write(\"  in \" + path.join(currentPath, packageName) + EOL);\n              let mainPath = \"assembly\";\n              if (packageMains.has(packageName)) { // use cached\n                mainPath = packageMains.get(packageName);\n              } else { // evaluate package.json\n                let jsonPath = path.join(currentPath, packageName, \"package.json\");\n                let jsonText = readFile(jsonPath, baseDir);\n                if (jsonText != null) {\n                  try {\n                    let json = JSON.parse(jsonText);\n                    if (typeof json.ascMain === \"string\") {\n                      mainPath = json.ascMain.replace(extension.re_index, \"\");\n                      packageMains.set(packageName, mainPath);\n                    }\n                  } catch (e) { /* nop */ }\n                }\n              }\n              const mainDir = path.join(currentPath, packageName, mainPath);\n              const plainName = filePath;\n              if ((sourceText = readFile(path.join(mainDir, plainName + extension.ext), baseDir)) != null) {\n                sourcePath = libraryPrefix + packageName + \"/\" + plainName + extension.ext;\n                packageBases.set(sourcePath.replace(extension.re, \"\"), path.join(currentPath, packageName));\n                if (opts.traceResolution) stderr.write(\"  -> \" + path.join(mainDir, plainName + extension.ext) + EOL);\n                break;\n              } else if (!isPackageRoot) {\n                const indexName = filePath + \"/index\";\n                if ((sourceText = readFile(path.join(mainDir, indexName + extension.ext), baseDir)) !== null) {\n                  sourcePath = libraryPrefix + packageName + \"/\" + indexName + extension.ext;\n                  packageBases.set(sourcePath.replace(extension.re, \"\"), path.join(currentPath, packageName));\n                  if (opts.traceResolution) stderr.write(\"  -> \" + path.join(mainDir, indexName + extension.ext) + EOL);\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    // No such file\n    if (sourceText == null) return null;\n    return { sourceText, sourcePath };\n  }\n\n  // Parses the backlog of imported files after including entry files\n  function parseBacklog() {\n    var internalPath;\n    while ((internalPath = assemblyscript.nextFile(program)) != null) {\n      let file = getFile(internalPath, assemblyscript.getDependee(program, internalPath));\n      if (file) {\n        stats.parseCount++;\n        stats.parseTime += measure(() => {\n          assemblyscript.parse(program, file.sourceText, file.sourcePath, false);\n        });\n      } else {\n        assemblyscript.parse(program, null, internalPath + extension.ext, false);\n      }\n    }\n    var numErrors = checkDiagnostics(program, stderr);\n    if (numErrors) {\n      const err = Error(numErrors + \" parse error(s)\");\n      err.stack = err.message; // omit stack\n      return callback(err);\n    }\n  }\n\n  // Include runtime template before entry files so its setup runs first\n  {\n    let runtimeName = String(opts.runtime);\n    let runtimePath = \"rt/index-\" + runtimeName;\n    let runtimeText = exports.libraryFiles[runtimePath];\n    if (runtimeText == null) {\n      runtimePath = runtimeName;\n      runtimeText = readFile(runtimePath + extension.ext, baseDir);\n      if (runtimeText == null) return callback(Error(\"Runtime '\" + runtimeName + \"' not found.\"));\n    } else {\n      runtimePath = \"~lib/\" + runtimePath;\n    }\n    stats.parseCount++;\n    stats.parseTime += measure(() => {\n      assemblyscript.parse(program, runtimeText, runtimePath + extension.ext, true);\n    });\n  }\n\n  // Include entry files\n  for (let i = 0, k = argv.length; i < k; ++i) {\n    const filename = argv[i];\n\n    let sourcePath = String(filename).replace(/\\\\/g, \"/\").replace(extension.re, \"\").replace(/[\\\\/]$/, \"\");\n\n    // Setting the path to relative path\n    sourcePath = path.isAbsolute(sourcePath) ? path.relative(baseDir, sourcePath).replace(/\\\\/g, \"/\") : sourcePath;\n\n    // Try entryPath.ext, then entryPath/index.ext\n    let sourceText = readFile(sourcePath + extension.ext, baseDir);\n    if (sourceText == null) {\n      sourceText = readFile(sourcePath + \"/index\" + extension.ext, baseDir);\n      if (sourceText != null) sourcePath += \"/index\" + extension.ext;\n      else sourcePath += extension.ext;\n    } else {\n      sourcePath += extension.ext;\n    }\n\n    stats.parseCount++;\n    stats.parseTime += measure(() => {\n      assemblyscript.parse(program, sourceText, sourcePath, true);\n    });\n  }\n\n  // Parse entry files\n  {\n    let code = parseBacklog();\n    if (code) return code;\n  }\n\n  // Call afterParse transform hook\n  {\n    let error = applyTransform(\"afterParse\", program.parser);\n    if (error) return callback(error);\n  }\n\n  // Parse additional files, if any\n  {\n    let code = parseBacklog();\n    if (code) return code;\n  }\n\n  // Print files and exit if listFiles\n  if (opts.listFiles) {\n    // FIXME: not a proper C-like API\n    stderr.write(program.sources.map(s => s.normalizedPath).sort().join(EOL) + EOL);\n    return callback(null);\n  }\n\n  // Pre-emptively initialize the program\n  stats.initializeCount++;\n  stats.initializeTime += measure(() => {\n    assemblyscript.initializeProgram(program);\n  });\n\n  // Call afterInitialize transform hook\n  {\n    let error = applyTransform(\"afterInitialize\", program);\n    if (error) return callback(error);\n  }\n\n  var module;\n  stats.compileCount++;\n  stats.compileTime += measure(() => {\n    module = assemblyscript.compile(program);\n  });\n  var numErrors = checkDiagnostics(program, stderr);\n  if (numErrors) {\n    if (module) module.dispose();\n    const err = Error(numErrors + \" compile error(s)\");\n    err.stack = err.message; // omit stack\n    return callback(err);\n  }\n\n  // Call afterCompile transform hook\n  {\n    let error = applyTransform(\"afterCompile\", module);\n    if (error) return callback(error);\n  }\n\n  // Validate the module if requested\n  if (!opts.noValidate) {\n    stats.validateCount++;\n    let isValid;\n    stats.validateTime += measure(() => {\n      isValid = module.validate();\n    });\n    if (!isValid) {\n      module.dispose();\n      return callback(Error(\"validate error\"));\n    }\n  }\n\n  // Set Binaryen-specific options\n  if (opts.trapMode === \"clamp\") {\n    stats.optimizeCount++;\n    stats.optimizeTime += measure(() => {\n      module.runPass(\"trap-mode-clamp\");\n    });\n  } else if (opts.trapMode === \"js\") {\n    stats.optimizeCount++;\n    stats.optimizeTime += measure(() => {\n      module.runPass(\"trap-mode-js\");\n    });\n  } else if (opts.trapMode !== \"allow\") {\n    module.dispose();\n    return callback(Error(\"Unsupported trap mode\"));\n  }\n\n  // Optimize the module\n  const debugInfo = opts.debug;\n  const usesARC = opts.runtime == \"half\" || opts.runtime == \"full\";\n  const converge = opts.converge;\n  const runPasses = [];\n  if (opts.runPasses) {\n    if (typeof opts.runPasses === \"string\") {\n      opts.runPasses = opts.runPasses.split(\",\");\n    }\n    if (opts.runPasses.length) {\n      opts.runPasses.forEach(pass => {\n        if (runPasses.indexOf(pass = pass.trim()) < 0)\n          runPasses.push(pass);\n      });\n    }\n  }\n\n  stats.optimizeTime += measure(() => {\n    stats.optimizeCount++;\n    module.optimize(optimizeLevel, shrinkLevel, debugInfo, usesARC);\n    module.runPasses(runPasses);\n    if (converge) {\n      let last = module.toBinary();\n      do {\n        stats.optimizeCount++;\n        module.optimize(optimizeLevel, shrinkLevel, debugInfo, usesARC);\n        module.runPasses(runPasses);\n        let next = module.toBinary();\n        if (next.output.length >= last.output.length) {\n          if (next.output.length > last.output.length) {\n            stderr.write(\"Last converge was suboptimial.\" + EOL);\n          }\n          break;\n        }\n        last = next;\n      } while (true);\n    }\n  });\n\n  // Prepare output\n  if (!opts.noEmit) {\n    if (opts.outFile != null) {\n      if (/\\.was?t$/.test(opts.outFile) && opts.textFile == null) {\n        opts.textFile = opts.outFile;\n      } else if (/\\.js$/.test(opts.outFile) && opts.jsFile == null) {\n        opts.jsFile = opts.outFile;\n      } else if (opts.binaryFile == null) {\n        opts.binaryFile = opts.outFile;\n      }\n    }\n\n    let hasStdout = false;\n    let hasOutput = opts.textFile != null\n                 || opts.binaryFile != null\n                 || opts.jsFile != null\n                 || opts.tsdFile != null\n                 || opts.idlFile != null;\n\n    // Write binary\n    if (opts.binaryFile != null) {\n      let basename = path.basename(opts.binaryFile);\n      let sourceMapURL = opts.sourceMap != null\n        ? opts.sourceMap.length\n          ? opts.sourceMap\n          : \"./\" + basename + \".map\"\n        : null;\n\n      let wasm;\n      stats.emitCount++;\n      stats.emitTime += measure(() => {\n        wasm = module.toBinary(sourceMapURL);\n      });\n\n      if (opts.binaryFile.length) {\n        writeFile(opts.binaryFile, wasm.output, baseDir);\n      } else {\n        writeStdout(wasm.output);\n        hasStdout = true;\n      }\n\n      // Post-process source map\n      if (wasm.sourceMap != null) {\n        if (opts.binaryFile.length) {\n          let map = JSON.parse(wasm.sourceMap);\n          map.sourceRoot = \"./\" + basename;\n          let contents = [];\n          map.sources.forEach((name, index) => {\n            let text = assemblyscript.getSource(program, name.replace(extension.re, \"\"));\n            if (text == null) return callback(Error(\"Source of file '\" + name + \"' not found.\"));\n            contents[index] = text;\n          });\n          map.sourcesContent = contents;\n          writeFile(path.join(\n            path.dirname(opts.binaryFile),\n            path.basename(sourceMapURL)\n          ).replace(/^\\.\\//, \"\"), JSON.stringify(map), baseDir);\n        } else {\n          stderr.write(\"Skipped source map (stdout already occupied)\" + EOL);\n        }\n      }\n    }\n\n    // Write text (also fallback)\n    if (opts.textFile != null || !hasOutput) {\n      let wat;\n      if (opts.textFile != null && opts.textFile.length) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          wat = module.toText();\n        });\n        writeFile(opts.textFile, wat, baseDir);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          wat = module.toText();\n        });\n        writeStdout(wat);\n      }\n    }\n\n    // Write WebIDL\n    if (opts.idlFile != null) {\n      let idl;\n      if (opts.idlFile.length) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          idl = assemblyscript.buildIDL(program);\n        });\n        writeFile(opts.idlFile, idl, baseDir);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          idl = assemblyscript.buildIDL(program);\n        });\n        writeStdout(idl);\n        hasStdout = true;\n      }\n    }\n\n    // Write TypeScript definition\n    if (opts.tsdFile != null) {\n      let tsd;\n      if (opts.tsdFile.length) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          tsd = assemblyscript.buildTSD(program);\n        });\n        writeFile(opts.tsdFile, tsd, baseDir);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          tsd = assemblyscript.buildTSD(program);\n        });\n        writeStdout(tsd);\n        hasStdout = true;\n      }\n    }\n\n    // Write JS (modifies the binary, so must be last)\n    if (opts.jsFile != null) {\n      let js;\n      if (opts.jsFile.length) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          js = module.toAsmjs();\n        });\n        writeFile(opts.jsFile, js, baseDir);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          js = module.toAsmjs();\n        });\n        writeStdout(js);\n      }\n    }\n  }\n\n  module.dispose();\n  if (opts.measure) {\n    printStats(stats, stderr);\n  }\n\n  return callback(null);\n\n  function readFileNode(filename, baseDir) {\n    let name = path.resolve(baseDir, filename);\n    try {\n      let text;\n      stats.readCount++;\n      stats.readTime += measure(() => {\n        text = fs.readFileSync(name, { encoding: \"utf8\" });\n      });\n      return text;\n    } catch (e) {\n      return null;\n    }\n  }\n\n  function writeFileNode(filename, contents, baseDir) {\n    try {\n      stats.writeCount++;\n      stats.writeTime += measure(() => {\n        const dirPath = path.resolve(baseDir, path.dirname(filename));\n        filename = path.basename(filename);\n        const outputFilePath = path.join(dirPath, filename);\n        if (!fs.existsSync(dirPath)) mkdirp(dirPath);\n        fs.writeFileSync(\n          outputFilePath, contents,\n          typeof contents === \"string\" ? { encoding: \"utf8\" } : void 0\n        );\n      });\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function listFilesNode(dirname, baseDir) {\n    var files;\n    try {\n      stats.readCount++;\n      stats.readTime += measure(() => {\n        files = fs.readdirSync(path.join(baseDir, dirname))\n          .filter(file => extension.re_except_d.test(file));\n      });\n      return files;\n    } catch (e) {\n      return null;\n    }\n  }\n\n  function writeStdout(contents) {\n    if (!writeStdout.used) {\n      stats.writeCount++;\n      writeStdout.used = true;\n    }\n    stats.writeTime += measure(() => {\n      if (typeof contents === \"string\") {\n        stdout.write(contents, { encoding: \"utf8\" });\n      } else {\n        stdout.write(contents);\n      }\n    });\n  }\n};\n\nconst toString = Object.prototype.toString;\n\nfunction isObject(arg) {\n  return toString.call(arg) === \"[object Object]\";\n}\n\nfunction getAsconfig(file, baseDir, readFile) {\n  const contents = readFile(file, baseDir);\n  const location = path.join(baseDir, file);\n  if (!contents) return null;\n\n  // obtain the configuration\n  let config;\n  try {\n    config = JSON.parse(contents);\n  } catch(ex) {\n    throw new Error(\"Asconfig is not valid json: \" + location);\n  }\n\n  // validate asconfig shape\n  if (config.options && !isObject(config.options)) {\n    throw new Error(\"Asconfig.options is not an object: \" + location);\n  }\n\n  if (config.include && !Array.isArray(config.include)) {\n    throw new Error(\"Asconfig.include is not an array: \" + location);\n  }\n\n  if (config.targets) {\n    if (!isObject(config.targets)) {\n      throw new Error(\"Asconfig.targets is not an object: \" + location);\n    }\n    const targets = Object.keys(config.targets);\n    for (let i = 0; i < targets.length; i++) {\n      const target = targets[i];\n      if (!isObject(config.targets[target])) {\n        throw new Error(\"Asconfig.targets.\" + target + \" is not an object: \" + location);\n      }\n    }\n  }\n\n  if (config.extends && typeof config.extends !== \"string\") {\n    throw new Error(\"Asconfig.extends is not a string: \" + location);\n  }\n\n  return config;\n}\n\nexports.getAsconfig = getAsconfig;\n\n/** Checks diagnostics emitted so far for errors. */\nfunction checkDiagnostics(program, stderr) {\n  var diagnostic;\n  var numErrors = 0;\n  while ((diagnostic = assemblyscript.nextDiagnostic(program)) != null) {\n    if (stderr) {\n      stderr.write(\n        assemblyscript.formatDiagnostic(diagnostic, stderr.isTTY, true) +\n        EOL + EOL\n      );\n    }\n    if (assemblyscript.isError(diagnostic)) ++numErrors;\n  }\n  return numErrors;\n}\n\nexports.checkDiagnostics = checkDiagnostics;\n\n/** Creates an empty set of stats. */\nfunction createStats() {\n  return {\n    readTime: 0,\n    readCount: 0,\n    writeTime: 0,\n    writeCount: 0,\n    parseTime: 0,\n    parseCount: 0,\n    initializeTime: 0,\n    initializeCount: 0,\n    compileTime: 0,\n    compileCount: 0,\n    emitTime: 0,\n    emitCount: 0,\n    validateTime: 0,\n    validateCount: 0,\n    optimizeTime: 0,\n    optimizeCount: 0,\n    transformTime: 0,\n    transformCount: 0\n  };\n}\n\nexports.createStats = createStats;\n\n/** Measures the execution time of the specified function.  */\nfunction measure(fn) {\n  const start = process.hrtime();\n  fn();\n  const times = process.hrtime(start);\n  return times[0] * 1e9 + times[1];\n}\n\nexports.measure = measure;\n\nfunction pad(str, len) {\n  while (str.length < len) str = \" \" + str;\n  return str;\n}\n\n/** Formats a high resolution time to a human readable string. */\nfunction formatTime(time) {\n  return time ? (time / 1e6).toFixed(3) + \" ms\" : \"n/a\";\n}\n\nexports.formatTime = formatTime;\n\n/** Formats and prints out the contents of a set of stats. */\nfunction printStats(stats, output) {\n  const format = (time, count) => pad(formatTime(time), 12) + \"  n=\" + count;\n  (output || process.stdout).write([\n    \"I/O Read   : \" + format(stats.readTime, stats.readCount),\n    \"I/O Write  : \" + format(stats.writeTime, stats.writeCount),\n    \"Parse      : \" + format(stats.parseTime, stats.parseCount),\n    \"Initialize : \" + format(stats.initializeTime, stats.initializeCount),\n    \"Compile    : \" + format(stats.compileTime, stats.compileCount),\n    \"Emit       : \" + format(stats.emitTime, stats.emitCount),\n    \"Validate   : \" + format(stats.validateTime, stats.validateCount),\n    \"Optimize   : \" + format(stats.optimizeTime, stats.optimizeCount),\n    \"Transform  : \" + format(stats.transformTime, stats.transformCount)\n  ].join(EOL) + EOL);\n}\n\nexports.printStats = printStats;\n\nvar allocBuffer = typeof global !== \"undefined\" && global.Buffer\n  ? global.Buffer.allocUnsafe || (len => new global.Buffer(len))\n  : len => new Uint8Array(len);\n\n/** Creates a memory stream that can be used in place of stdout/stderr. */\nfunction createMemoryStream(fn) {\n  var stream = [];\n  stream.write = function(chunk) {\n    if (fn) fn(chunk);\n    if (typeof chunk === \"string\") {\n      let buffer = allocBuffer(utf8.length(chunk));\n      utf8.write(chunk, buffer, 0);\n      chunk = buffer;\n    }\n    this.push(chunk);\n  };\n  stream.reset = function() {\n    stream.length = 0;\n  };\n  stream.toBuffer = function() {\n    var offset = 0, i = 0, k = this.length;\n    while (i < k) offset += this[i++].length;\n    var buffer = allocBuffer(offset);\n    offset = i = 0;\n    while (i < k) {\n      buffer.set(this[i], offset);\n      offset += this[i].length;\n      ++i;\n    }\n    return buffer;\n  };\n  stream.toString = function() {\n    var buffer = this.toBuffer();\n    return utf8.read(buffer, 0, buffer.length);\n  };\n  return stream;\n}\n\nexports.createMemoryStream = createMemoryStream;\n\n/** Compatible TypeScript compiler options for syntax highlighting etc. */\nexports.tscOptions = {\n  alwaysStrict: true,\n  noImplicitAny: true,\n  noImplicitReturns: true,\n  noImplicitThis: true,\n  noEmitOnError: true,\n  strictNullChecks: true,\n  experimentalDecorators: true,\n  target: \"esnext\",\n  module: \"commonjs\",\n  noLib: true,\n  types: [],\n  allowJs: false\n};\n","/**\n * @fileoverview UTF8 utility.\n * @license Apache-2.0\n */\n\n// @protobufjs/utf8\n\n/**\n * A minimal UTF8 implementation for number arrays.\n * @memberof util\n * @namespace\n */\nvar utf8 = exports;\n\n/**\n * Calculates the UTF8 byte length of a string.\n * @param {string} string String\n * @returns {number} Byte length\n */\nutf8.length = function utf8_length(string) {\n  var len = 0,\n      c = 0;\n  for (var i = 0, l = string.length; i < l; ++i) {\n    c = string.charCodeAt(i);\n    if (c < 128)\n      len += 1;\n    else if (c < 2048)\n      len += 2;\n    else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\n      ++i;\n      len += 4;\n    } else\n      len += 3;\n  }\n  return len;\n};\n\n/**\n * Reads UTF8 bytes as a string.\n * @param {Uint8Array} buffer Source buffer\n * @param {number} start Source start\n * @param {number} end Source end\n * @returns {string} String read\n */\nutf8.read = function utf8_read(buffer, start, end) {\n  var len = end - start;\n  if (len < 1)\n    return \"\";\n  var parts = null,\n      chunk = [],\n      i = 0, // char offset\n      t;     // temporary\n  while (start < end) {\n    t = buffer[start++];\n    if (t < 128)\n      chunk[i++] = t;\n    else if (t > 191 && t < 224)\n      chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\n    else if (t > 239 && t < 365) {\n      t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\n      chunk[i++] = 0xD800 + (t >> 10);\n      chunk[i++] = 0xDC00 + (t & 1023);\n    } else\n      chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\n    if (i > 8191) {\n      (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\n      i = 0;\n    }\n  }\n  if (parts) {\n    if (i)\n      parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\n    return parts.join(\"\");\n  }\n  return String.fromCharCode.apply(String, chunk.slice(0, i));\n};\n\n/**\n * Writes a string as UTF8 bytes.\n * @param {string} string Source string\n * @param {Uint8Array} buffer Destination buffer\n * @param {number} offset Destination offset\n * @returns {number} Bytes written\n */\nutf8.write = function utf8_write(string, buffer, offset) {\n  var start = offset,\n      c1, // character 1\n      c2; // character 2\n  for (var i = 0; i < string.length; ++i) {\n    c1 = string.charCodeAt(i);\n    if (c1 < 128) {\n      buffer[offset++] = c1;\n    } else if (c1 < 2048) {\n      buffer[offset++] = c1 >> 6 | 192;\n      buffer[offset++] = c1 & 63 | 128;\n    } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\n      c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\n      ++i;\n      buffer[offset++] = c1 >> 18 | 240;\n      buffer[offset++] = c1 >> 12 & 63 | 128;\n      buffer[offset++] = c1 >> 6 & 63 | 128;\n      buffer[offset++] = c1 & 63 | 128;\n    } else {\n      buffer[offset++] = c1 >> 12 | 224;\n      buffer[offset++] = c1 >> 6 & 63 | 128;\n      buffer[offset++] = c1 & 63 | 128;\n    }\n  }\n  return offset - start;\n};\n","/**\n * @fileoverview Command line options utility.\n * @license Apache-2.0\n */\n\nconst path = require(\"path\");\nconst colorsUtil = require(\"./colors\");\n\n// type | meaning\n// -----|---------------\n// b    | boolean\n// i    | integer\n// f    | float\n// s    | string\n// I    | integer array\n// F    | float array\n// S    | string array\n\n/** Parses the specified command line arguments according to the given configuration. */\nfunction parse(argv, config, propagateDefaults = true) {\n  var options = {};\n  var unknown = [];\n  var args = [];\n  var trailing = [];\n\n  // make an alias map and initialize defaults\n  var aliases = {};\n  Object.keys(config).forEach(key => {\n    if (key.startsWith(\" \")) return;\n    var option = config[key];\n    if (option.alias != null) {\n      if (typeof option.alias === \"string\") aliases[option.alias] = key;\n      else if (Array.isArray(option.alias)) option.alias.forEach(alias => aliases[alias] = key);\n    }\n    if (propagateDefaults && option.default != null) options[key] = option.default;\n  });\n\n  // iterate over argv\n  for (var i = 0, k = (argv = argv.slice()).length; i < k; ++i) {\n    let arg = argv[i];\n    if (arg == \"--\") { ++i; break; }\n    let match = /^(?:(-\\w)(?:=(.*))?|(--\\w{2,})(?:=(.*))?)$/.exec(arg), option, key;\n    if (match) {\n      if (config[arg]) option = config[key = arg]; // exact\n      else if (match[1] != null) { // alias\n        option = config[key = aliases[match[1].substring(1)]];\n        if (option && match[2] != null) argv[i--] = match[2];\n      } else if (match[3] != null) { // full\n        option = config[key = match[3].substring(2)];\n        if (option && match[4] != null) argv[i--] = match[4];\n      }\n    } else {\n      if (arg.charCodeAt(0) == 45) option = config[key = arg]; // exact\n      else { args.push(arg); continue; } // argument\n    }\n    if (option) {\n      if (option.value) {\n        // alias setting fixed values\n        Object.keys(option.value).forEach(k => options[k] = option.value[k]);\n      } else if (option.type == null || option.type === \"b\") {\n        // boolean flag not taking a value\n        options[key] = true;\n      } else {\n        if (i + 1 < argv.length && argv[i + 1].charCodeAt(0) != 45) {\n          // non-boolean with given value\n          switch (option.type) {\n            case \"i\": options[key] = parseInt(argv[++i], 10); break;\n            case \"I\": options[key] = (options[key] || []).concat(parseInt(argv[++i], 10)); break;\n            case \"f\": options[key] = parseFloat(argv[++i]); break;\n            case \"F\": options[key] = (options[key] || []).concat(parseFloat(argv[++i])); break;\n            case \"s\": options[key] = String(argv[++i]); break;\n            case \"S\": options[key] = (options[key] || []).concat(argv[++i].split(\",\")); break;\n            default: unknown.push(arg); --i;\n          }\n        } else {\n          // non-boolean with omitted value\n          switch (option.type) {\n            case \"i\":\n            case \"f\": options[key] = option.default || 0; break;\n            case \"s\": options[key] = option.default || \"\"; break;\n            case \"I\":\n            case \"F\":\n            case \"S\": options[key] = option.default || []; break;\n            default: unknown.push(arg);\n          }\n        }\n      }\n    } else unknown.push(arg);\n  }\n  while (i < k) trailing.push(argv[i++]); // trailing\n  if (propagateDefaults) addDefaults(config, options);\n\n  return { options, unknown, arguments: args, trailing };\n}\n\nexports.parse = parse;\n\n/** Generates the help text for the specified configuration. */\nfunction help(config, options) {\n  if (!options) options = {};\n  var indent = options.indent || 2;\n  var padding = options.padding || 24;\n  var eol = options.eol || \"\\n\";\n  var sbCategories = {};\n  var sbOther = [];\n  Object.keys(config).forEach(key => {\n    var option = config[key];\n    if (option.description == null) return;\n    var text = \"\";\n    while (text.length < indent) text += \" \";\n    text += \"--\" + key;\n    if (option.alias) text += \", -\" + option.alias;\n    while (text.length < padding) text += \" \";\n    var sb;\n    if (!options.noCategories && option.category) {\n      if (!(sb = sbCategories[option.category])) {\n        sbCategories[option.category] = sb = [];\n      }\n    } else {\n      sb = sbOther;\n    }\n    if (Array.isArray(option.description)) {\n      sb.push(text + option.description[0] + option.description.slice(1).map(line => {\n        for (let i = 0; i < padding; ++i) line = \" \" + line;\n        return eol + line;\n      }).join(\"\"));\n    } else sb.push(text + option.description);\n  });\n  var sb = [];\n  var hasCategories = false;\n  Object.keys(sbCategories).forEach(category => {\n    hasCategories = true;\n    sb.push(eol + \" \" + colorsUtil.gray(category) + eol);\n    sb.push(sbCategories[category].join(eol));\n  });\n  if (hasCategories) {\n    sb.push(eol + \" \" + colorsUtil.gray(\"Other\") + eol);\n  }\n  sb.push(sbOther.join(eol));\n  return sb.join(eol);\n}\n\nexports.help = help;\n\n/** Sanitizes an option value to be a valid value of the option's type. */\nfunction sanitizeValue(value, type) {\n  if (value != null) {\n    switch (type) {\n      case undefined:\n      case \"b\": return Boolean(value);\n      case \"i\": return Math.trunc(value) || 0;\n      case \"f\": return Number(value) || 0;\n      case \"s\": {\n        if (value === true) return \"\";\n        return String(value);\n      }\n      case \"I\": {\n        if (!Array.isArray(value)) value = [ value ];\n        return value.map(v => Math.trunc(v) || 0);\n      }\n      case \"F\": {\n        if (!Array.isArray(value)) value = [ value ];\n        return value.map(v => Number(v) || 0);\n      }\n      case \"S\": {\n        if (!Array.isArray(value)) value = [ value ];\n        return value.map(String);\n      }\n    }\n  }\n  return undefined;\n}\n\n/** Merges two sets of options into one, preferring the current over the parent set. */\nfunction merge(config, currentOptions, parentOptions, parentBaseDir) {\n  const mergedOptions = {};\n  for (const [key, { type, mutuallyExclusive, isPath, useNodeResolution, cliOnly }] of Object.entries(config)) {\n    let currentValue = sanitizeValue(currentOptions[key], type);\n    let parentValue = sanitizeValue(parentOptions[key], type);\n    if (currentValue == null) {\n      if (parentValue != null) {\n        // only parent value present\n        if (cliOnly) continue;\n        if (Array.isArray(parentValue)) {\n          let exclude;\n          if (isPath) {\n            parentValue = parentValue.map(value => resolvePath(value, parentBaseDir, useNodeResolution));\n          }\n          if (mutuallyExclusive != null && (exclude = currentOptions[mutuallyExclusive])) {\n            mergedOptions[key] = parentValue.filter(value => !exclude.includes(value));\n          } else {\n            mergedOptions[key] = parentValue.slice();\n          }\n        } else {\n          if (isPath) {\n            parentValue = resolvePath(parentValue, parentBaseDir, useNodeResolution);\n          }\n          mergedOptions[key] = parentValue;\n        }\n      }\n    } else if (parentValue == null) {\n      // only current value present\n      if (Array.isArray(currentValue)) {\n        mergedOptions[key] = currentValue.slice();\n      } else {\n        mergedOptions[key] = currentValue;\n      }\n    } else {\n      // both current and parent values present\n      if (Array.isArray(currentValue)) {\n        if (cliOnly) {\n          mergedOptions[key] = currentValue.slice();\n          continue;\n        }\n        let exclude;\n        if (isPath) {\n          parentValue = parentValue.map(value => resolvePath(value, parentBaseDir, useNodeResolution));\n        }\n        if (mutuallyExclusive != null && (exclude = currentOptions[mutuallyExclusive])) {\n          mergedOptions[key] = [\n            ...currentValue,\n            ...parentValue.filter(value => !currentValue.includes(value) && !exclude.includes(value))\n          ];\n        } else {\n          mergedOptions[key] = [\n            ...currentValue,\n            ...parentValue.filter(value => !currentValue.includes(value)) // dedup\n          ];\n        }\n      } else {\n        mergedOptions[key] = currentValue;\n      }\n    }\n  }\n  return mergedOptions;\n}\n\nexports.merge = merge;\n\nconst dynrequire = typeof __webpack_require__ === \"function\"\n  ? __non_webpack_require__\n  : require;\n\n/** Resolves a single possibly relative path. Keeps absolute paths, otherwise prepends baseDir. */\nfunction resolvePath(p, baseDir, useNodeResolution = false) {\n  if (path.isAbsolute(p)) return p;\n  if (useNodeResolution && !p.startsWith(\".\")) {\n    return dynrequire.resolve(p, { paths: [ baseDir ] });\n  }\n  return path.join(baseDir, p);\n}\n\nexports.resolvePath = resolvePath;\n\n/** Populates default values on a parsed options result. */\nfunction addDefaults(config, options) {\n  for (const [key, { default: defaultValue }] of Object.entries(config)) {\n    if (options[key] == null && defaultValue != null) {\n      options[key] = defaultValue;\n    }\n  }\n}\n\nexports.addDefaults = addDefaults;\n","/**\n * @fileoverview Recursive mkdir.\n * @license\n * Copyright 2010 James Halliday (mail@substack.net)\n *\n * This project is free software released under the MIT/X11 license:\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst path = require(\"path\");\nconst fs = require(\"fs\");\nconst process = require(\"process\"); // ensure shim\n\nmodule.exports = function mkdirp(p, opts, made) {\n  if (!opts || typeof opts !== \"object\") {\n    opts = { mode: opts };\n  }\n  var mode = opts.mode;\n  if (mode === undefined) {\n    mode = 0o777 & (~process.umask());\n  }\n  if (!made) made = null;\n  p = path.resolve(p);\n  try {\n    fs.mkdirSync(p, mode);\n    made = made || p;\n  } catch (err0) {\n    switch (err0.code) {\n      case \"ENOENT\":\n        made = mkdirp(path.dirname(p), opts, made);\n        mkdirp(p, opts, made);\n        break;\n      default:\n        var stat;\n        try {\n          stat = fs.statSync(p);\n        } catch (err1) {\n          throw err0;\n        }\n        if (!stat.isDirectory()) throw err0;\n        break;\n    }\n  }\n  return made;\n};\n","/**\n * @fileoverview File finding utility.\n * @license Apache-2.0\n */\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\n\nfunction findFiles(dirname, filter) {\n  var out = [];\n  fs.readdirSync(dirname).forEach(name => {\n    if (fs.statSync(path.join(dirname, name)).isDirectory()) {\n      findFiles(path.join(dirname, name), filter).forEach(iname => out.push(name + \"/\" + iname));\n    } else if (!filter || typeof filter === \"function\" ? filter(name) : filter.test(name)) {\n      out.push(name);\n    }\n  });\n  return out;\n}\n\nexports.files = findFiles;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__11__;","if(typeof __WEBPACK_EXTERNAL_MODULE__12__ === 'undefined') {var e = new Error(\"Cannot find module 'assemblyscript'\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__12__;"],"sourceRoot":""}